{
  "name": "hasDataSince",
  "version": "1.0.11",
  "type": "sensor",
  "script": "const moment = require('moment')\n\nconst main = async () => {\n  const resource = options.node.RESOURCE\n  const metric = options.requiredProperties.metric\n  const since = String(options.requiredProperties.since)\n\n  if (!resource) {\n    throw new Error('No resource provided.')\n  }\n\n  let duration = since.indexOf('P') > -1\n    ? Date.now() - moment.duration(since)\n    : Number(moment(Number(since)))\n\n  duration = moment(duration)\n\n  if (!moment(duration).isValid() || duration < 1000) {\n    throw new Error(`Invalid property 'since' provided. (${since})`)\n  }\n\n  const res = metric\n    ? await waylay.data.getLastMetric(resource, metric)\n    : await waylay.data.getLatestDocument(resource)\n\n  const hasDataSince = res.timestamp > Number(duration)\n\n  const observedState = hasDataSince ? 'True' : 'False'\n\n  console.log(res)\n  send(null, { observedState })\n}\n\nmain().catch(send)\n",
  "metadata": {
    "author": "",
    "description": "<h4>hasDataSince Sensor</h4>\n<br>\nChecks if a resource has received data from a specific metric since a moment in time.\n<br><br>\n<b>States</b>\n<br>\n<ul>\n    <li>\n        True\n    </li>\n    <li>\n        False\n    </li>\n</ul>\n<br>\n<b>Properties</b>\n<ul>\n    <li>\n        metric: The metric you want to check for data\n    </li>\n    <li>\n        since: epoch time in milliseconds or <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO_8601 duration </a>\n    </li>\n</ul>",
    "iconURL": "https://static.waylay.io/plugs/icons/dbGetItem.png",
    "supportedStates": [
      "True",
      "False"
    ],
    "requiredProperties": [
      "metric",
      "since"
    ],
    "requiredRawData": [],
    "rawData": []
  },
  "dependencies": {
    "moment": "2.29.1"
  }
}