{
  "name": "getContactFromSalesForce",
  "version": "0.0.13",
  "type": "sensor",
  "script": "const jsforce = require('jsforce')\nconst pify = require('pify')\nconst Waylay = require('@waylay/client')\nconst _ = require('lodash')\n\nasync function main () {\n  const caseObject = cleanObject({\n    Id: options.requiredProperties.Id,\n    Name: options.requiredProperties.Name,\n    Email: options.requiredProperties.Email\n  })\n\n  const conn = await getSalesforceConnection()\n\n  const SfContact = pify(conn.sobject('Contact'))\n\n  const res = await SfContact.find(caseObject)\n\n  if (res.length > 0) {\n    send(null, { observedState: 'Found', rawData: res[0] })\n  } else {\n    send(null, { observedState: 'Not Found' })\n  }\n}\n\nasync function getSalesforceConnection () {\n  try {\n    const waylayClient = new Waylay({\n      token: options.globalSettings.waylayToken\n    })\n\n    const { access_token: accessToken } = await waylayClient.hoard.getTokens('salesforce', { scope: 'organisation' })\n\n    if (!accessToken) {\n      throw new Error('No user or token provided via Hoard service')\n    }\n\n    const jsclient = new jsforce.Connection({\n      instanceUrl: 'https://eu26.salesforce.com',\n      accessToken\n    })\n\n    return jsclient\n  } catch (error) {\n    throw new Error(`error: ${error} \\n possible solution: Connect Salesforce through the connections`)\n  }\n}\n\n/**\n * remove empty values in object before sending to salesforce\n */\nfunction cleanObject (object) {\n  return _.reduce(object, (acc, v, k) => {\n    if (v) acc[k] = v\n    return acc\n  }, {})\n}\n\nmain().catch(send)\n",
  "metadata": {
    "author": "",
    "iconURL": "https://static.waylay.io/plugs/icons/get-account-from-salesforce.png",
    "description": "Contact sensor for SalesForce, raw Data example:\n\n<pre>\n {\n  \"attributes\": {\n    \"type\": \"Contact\",\n    \"url\": \"/services/data/v34.0/sobjects/Contact/0031i000006vlJOAAY\"\n  },\n  \"Id\": \"0031i000006vlJOAAY\",\n  \"IsDeleted\": false,\n  \"MasterRecordId\": null,\n  \"AccountId\": null,\n  \"LastName\": \"Test\",\n  \"FirstName\": \"Tom\",\n  \"Salutation\": \"Mr.\",\n  \"Name\": \"Tom Test\",\n  \"OtherStreet\": null,\n  \"OtherCity\": null,\n  \"OtherState\": null,\n  \"OtherPostalCode\": null,\n  \"OtherCountry\": null,\n  \"OtherLatitude\": null,\n  \"OtherLongitude\": null,\n  \"OtherAddress\": null,\n  \"MailingStreet\": null,\n  \"MailingCity\": null,\n  \"MailingState\": null,\n  \"MailingPostalCode\": null,\n  \"MailingCountry\": null,\n  \"MailingLatitude\": null,\n  \"MailingLongitude\": null,\n  \"MailingAddress\": null,\n  \"Phone\": null,\n  \"Fax\": null,\n  \"MobilePhone\": null,\n  \"HomePhone\": null,\n  \"OtherPhone\": null,\n  \"AssistantPhone\": null,\n  \"ReportsToId\": null,\n  \"Email\": null,\n  \"Title\": null,\n  \"Department\": null,\n  \"AssistantName\": null,\n  \"LeadSource\": null,\n  \"Birthdate\": null,\n  \"Description\": null,\n  \"OwnerId\": \"0051i000000fYz5AAE\",\n  \"CreatedDate\": \"2019-04-17T13:08:28.000+0000\",\n  \"CreatedById\": \"0051i000000fYz5AAE\",\n  \"LastModifiedDate\": \"2019-04-18T11:44:52.000+0000\",\n  \"LastModifiedById\": \"0051i000000fYz5AAE\",\n  \"SystemModstamp\": \"2019-04-18T11:44:52.000+0000\",\n  \"LastActivityDate\": null,\n  \"LastCURequestDate\": null,\n  \"LastCUUpdateDate\": null,\n  \"LastViewedDate\": \"2019-04-18T12:20:39.000+0000\",\n  \"LastReferencedDate\": \"2019-04-18T12:20:39.000+0000\",\n  \"EmailBouncedReason\": null,\n  \"EmailBouncedDate\": null,\n  \"IsEmailBounced\": false,\n  \"PhotoUrl\": \"/services/images/photo/0031i000006vlJOAAY\",\n  \"Jigsaw\": null,\n  \"JigsawContactId\": null,\n  \"CleanStatus\": \"Pending\",\n  \"Level__c\": null,\n  \"Languages__c\": null\n}\n</pre>\n",
    "rawData": [
      {
        "dataType": "string",
        "parameter": "Id"
      },
      {
        "dataType": "string",
        "parameter": "AccountId"
      },
      {
        "dataType": "string",
        "parameter": "LastName"
      },
      {
        "dataType": "string",
        "parameter": "FirstName"
      },
      {
        "dataType": "string",
        "parameter": "Name"
      },
      {
        "dataType": "string",
        "parameter": "Phone"
      },
      {
        "dataType": "string",
        "parameter": "MobilePhone"
      },
      {
        "dataType": "string",
        "parameter": "Email"
      },
      {
        "dataType": "string",
        "parameter": "Title"
      },
      {
        "dataType": "string",
        "parameter": "Department"
      },
      {
        "dataType": "string",
        "parameter": "Description"
      },
      {
        "dataType": "string",
        "parameter": "MailingAddress"
      },
      {
        "dataType": "string",
        "parameter": "MailingCountry"
      },
      {
        "dataType": "string",
        "parameter": "MailingStreet"
      },
      {
        "dataType": "string",
        "parameter": "MailingState"
      },
      {
        "dataType": "string",
        "parameter": "MailingPostalCode"
      },
      {
        "dataType": "string",
        "parameter": "MailingLatitude"
      },
      {
        "dataType": "string",
        "parameter": "MailingLongitude"
      }
    ],
    "requiredProperties": [
      "Id",
      "Name",
      "Email"
    ],
    "supportedStates": [
      "Found",
      "Not Found"
    ]
  },
  "dependencies": {
    "jsforce": "1.10.0",
    "pify": "5.0.0",
    "@waylay/client": "2.20.0",
    "lodash": "4.17.15"
  }
}