{
  "name": "temperatureRange",
  "version": "0.0.5",
  "type": "sensor",
  "script": "var API_KEY = options.globalSettings.OPENWEATHER_KEY\nvar city = waylayUtil.getProperty(options, \"city\")\nvar upperBound = waylayUtil.getProperty(options, \"upperBound\")\nvar lowerBound = waylayUtil.getProperty(options, \"lowerBound\") \nif(upperBound === undefined  || lowerBound === undefined || city === undefined){\n    send(new Error(\"missing properties\"))\n} else {\n    var url =\"http://api.openweathermap.org/data/2.5/weather?q=\" + city + \"&units=metric\";\n    if(API_KEY)\n      url = url + '&APPID='+API_KEY;\n    try {\n        request({\n            \"uri\": url\n        }, function(err, response, body){\n            if (!err && response.statusCode == 200) {\n                var data = JSON.parse(body);\n                console.log(data);\n                if(data.cod && data.cod != \"200\" && data.message)\n                   throw new Error(data.message);\n                var state = data.weather[0].main;\n                var icon = data.weather[0].icon;\n                var temperature = data.main.temp;\n                \n                var retState;\n                if(temperature > upperBound)\n                  retState = \"Above\";\n                else if(temperature > lowerBound)\n                  retState = \"In Range\";\n                else \n                  retState = \"Below\";\n                var value = {\n                    observedState: retState,\n                    rawData :{\n                      temperature: data.main.temp,\n                      pressure: data.main.pressure,\n                      humidity: data.main.humidity,\n                      temp_min: data.main.temp_min,\n                      temp_max: data.main.temp_max,\n                      wind_speed: data.wind.speed,\n                      clouds_coverage: data.clouds.all,\n                      sunrise: data.sys.sunrise,\n                      sunset: data.sys.sunset,\n                      longitude: data.coord.lon,\n                      latitude:data.coord.lat,\n                      name: data.name,\n                      condition: state,\n                      icon: \"http://openweathermap.org/img/w/\"+icon +\".png\"\n                    }\n               };\n               //console.log(JSON.stringify(value));\n               send(null, value);\n            }else {\n                console.log(response);\n                send(new Error(response.statusCode));\n            }\n        });\n    } catch(error){\n        send(new Error(error));\n    }\n}\n    ",
  "metadata": {
    "author": "Waylay",
    "category": "Weather",
    "description": "Temperature sensor based on the API provided by <a target=\"_blank\" href=\"http://openweathermap.org/\">Open weather</a><br>\nPlease be aware that there are many cities in US that have the same name as the \none in Europe, so it is always better to specify the country, example: Paris, France\n<br><br>\n\n<b>Properties</b>\n<ul>\n<li>city (format: city, country)</li>\n<li>upperBound</li>\n<li>lowerBound</li>\n</ul>\n\nRawData:\n<ul>\n<li>temperature</li>\n<li>pressure</li>\n<li>humidity</li>\n<li>temp_min</li>\n<li>temp_max</li>\n<li>wind_speed</li>\n<li>clouds_coverage</li>\n<li>sunrise</li>\n<li>sunset</li>\n<li>longitude</li>\n<li>latitude</li>\n<li>name</li>\n<li>condition (state)</li>\n<li>icon</li>\n</ul>",
    "documentationURL": "http://api.openweathermap.org/data/2.5/weather?q=London&units=metric",
    "iconURL": "https://static.waylay.io/plugs/icons/temperature-range.png",
    "supportedStates": [
      "In Range",
      "Below",
      "Above"
    ],
    "requiredProperties": [
      "city",
      "upperBound",
      "lowerBound"
    ],
    "requiredRawData": [],
    "rawData": [
      {
        "parameter": "temperature",
        "dataType": "double"
      },
      {
        "parameter": "humidity",
        "dataType": "double"
      },
      {
        "parameter": "wind_speed",
        "dataType": "double"
      },
      {
        "parameter": "longitude",
        "dataType": "double"
      },
      {
        "parameter": "latitude",
        "dataType": "double"
      },
      {
        "parameter": "clouds_coverage",
        "dataType": "double"
      },
      {
        "parameter": "name",
        "dataType": "double"
      },
      {
        "parameter": "condition",
        "dataType": "double"
      },
      {
        "parameter": "icon",
        "dataType": "double"
      }
    ]
  }
}
