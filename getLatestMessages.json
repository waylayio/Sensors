{
  "name": "getLatestMessages",
  "version": "3.0.0",
  "type": "sensor",
  "script": "const { resource } = options.requiredProperties\n\nasync function execute () {\n  if (!resource) {\n    return send(new Error('No resource provided'))\n  }\n  try {\n    const data = await waylay.data.getSeries(resource)\n    const count = data.length\n    return send(null, { observedState: 'Collected', rawData: { data, count } })\n  } catch (error) {\n    return send(null, { observedState: 'Not Collected', rawData: { errorMessage: 'Failed to get latest messages: ' + error } })\n  }\n}\n\nexecute()\n",
  "metadata": {
    "author": "",
    "description": "<h4>getLatestMessages Sensor</h4>\n<br>\nGives 100 latest messages stored in the cloud cache\n<br><br>\n<b>States</b>\n<br>\n<ul>\n    <li>\n        Collected\n    </li>\n     <li>\n        Not Collected\n    </li>\n</ul>\n<br>\n<b>Raw data</b>\n<ul>\n    <li>\n        data: The array of found messages\n    </li>\n    <li>\n        count: Amount of found messages between now and last execution\n    </li>\n</ul>\n<br>",
    "documentationURL": "https://docs.waylay.io/plugins/getlatestmessages/",
    "iconURL": "https://static.waylay.io/plugs/icons/inventory.png",
    "supportedStates": [
      "Collected",
      "Not Collected"
    ],
    "requiredProperties": [
      "resource"
    ],
    "requiredRawData": [],
    "rawData": [
      {
        "parameter": "data",
        "dataType": "object"
      },
      {
        "parameter": "count",
        "dataType": "double"
      }
    ],
    "configuration": [
      {
        "name": "resource",
        "type": "string",
        "mandatory": true,
        "format": {},
        "defaultValue": ""
      }
    ]
  }
}