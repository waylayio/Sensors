{
  "name": "streamDataHistorySensor",
  "version": "0.0.8",
  "type": "sensor",
  "script": "// Maintains a short-term history of stream data\nvar historySize = waylayUtil.getProperty(options, \"historySize\") || 50\nvar streamData = waylayUtil.getStreamData(options)\nvar history = waylayUtil.getCacheData(options, \"history\") || new Array()\nif (streamData !== undefined) {\n    console.log(\"Adding streamData: \", streamData)\n    history.unshift(streamData)\n    history = history.slice(0, historySize)\n    console.log('array', history)\n    send(null, {observedState : \"Stored\", rawData : {history}})\n} else {\n    // This isn't a cycle_history message, so we just skip it\n    send(null, {observedState: \"Not Stored\"})\n}\n",
  "metadata": {
    "author": "Waylay",
    "category": "Streaming",
    "description": "Maintains stream data history.\n\nBy default the last 50 entries are stored, but this can\nbe customized with the historySize parameter.",
    "iconURL": "https://static.waylay.io/plugs/icons/streamDataHistorySensor.png",
    "supportedStates": [
      "Stored",
      "Not Stored"
    ],
    "requiredProperties": [
      "historySize"
    ],
    "requiredRawData": [],
    "rawData": [
      {
        "parameter": "history",
        "dataType": "object[]"
      }
    ]
  }
}
