{
  "name": "getTimeAboveThreshold",
  "version": "0.0.3",
  "type": "sensor",
  "script": "var resource  = waylayUtil.getProperty(options, \"resource\") || waylayUtil.getResource(options) \nconst threshold = waylayUtil.getProperty(options, \"threshold\") || 0\n\nvar metric = options.requiredProperties.metric\nvar hours =  waylayUtil.getProperty(options, \"hours\") || 1\n\nvar duration = moment.duration(parseInt(hours), 'hours')\nvar now = moment()\nvar from = moment(now).subtract(duration)\nvar groupingSeconds = Math.ceil(duration.asSeconds() / 2000)\nvar qs = {from: from.unix() * 1000, until: now.unix() * 1000, grouping: groupingSeconds + 's'}\n\nwaylay.data.baseUrl =   options.globalSettings.waylay_data ||  \"https://data.waylay.io\"\n\nvar sumInTimeAboveThreshold = function (data, threshold) {\n    var sum = 0\n    for (let i = 1; i < data.length - 1; i++) {\n      if(data[i][1] > threshold) {\n          sum += data[i][0] - data[i-1][0]\n      }\n    }\n    return sum/1000\n}\n\nwaylay.data.getMetricSeries(resource, metric, qs)\n.then(data => {\n    data.series = _.reject(data.series, d=> { return d[1] === null })\n    data.series = _.sortBy(data.series, d =>{ return d[0] })\n    //console.log(\"min frequency\", findMinimalFreq(data.series))\n    if(data.series.length > 0) {\n        var totalTime = sumInTimeAboveThreshold(data.series, threshold)\n        var value = {\n            observedState: \"Collected\",\n            rawData: {totalTime, data: data.series}\n        }\n        send(null, value)\n    } else {\n        send(null, {observedState : \"Not Collected\",rawData:{query: data.query}});\n    }\n})\n.catch(err=> {\n    console.log(err)\n    send(new Error(err))\n})\n\n\n         ",
  "metadata": {
    "author": "Veselin",
    "category": "Waylay",
    "description": "Gives back the time in seconds (totalTime) that values were above the threshold\nInput arguments are:\n<ul>\n<li>resource</li>\n<li>metric</li>\n<li>hours, past number of hours, default 1 hour</li>\n<li>threshold, default value is 0</li>\n<ul>\n",
    "documentationURL": "",
    "iconURL": "http://static.waylay.io/plugs/icons/timer.png",
    "supportedStates": [
      "Collected",
      "Not Collected"
    ],
    "requiredProperties": [
      "resource",
      "metric",
      "hours",
      "threshold"
    ],
    "requiredRawData": [],
    "rawData": [
      {
        "parameter": "data",
        "dataType": "object[]"
      },
      {
        "parameter": "totalTime",
        "dataType": "double"
      }
    ]
  }
}
