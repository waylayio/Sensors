{
    "name": "RetrieveSections",
    "version": "0.2.1",
    "type": "sensor",
    "script": "var username;\nvar authorizationToken;\nif (__.isEmpty(options.requiredProperties.username)) {\n    username = options.globalSettings.synfield_guest_username;\n} else {\n    try {\n        username = waylayUtil.getRawData(options, options.requiredProperties.username);\n    } catch (err) {\n        username = options.requiredProperties.username;\n    }\n}\nif (__.isEmpty(options.requiredProperties.authorizationToken)) {\n    authorizationToken = options.globalSettings.synfield_guest_authorizationToken;\n} else {\n    try {\n        authorizationToken = waylayUtil.getRawData(options, options.requiredProperties.authorizationToken);\n    } catch (err) {\n        authorizationToken = options.requiredProperties.authorizationToken;\n    }\n}\ntry {\n    var url = 'http://api-synfield.synelixis.com/v1/sections/owner/' + username ;\n   \n    request({\n            'uri': url,\n            'headers' : {\n                'Authorization' : authorizationToken,\n                'Accept' : 'application/json'\n            }\n    }, function(err, response, body){\n        \n        if (!err && response.statusCode == 200) {\n                var data = JSON.parse(body);\n                \n                var sections = [];\n                sections = data.response.sections;\n                \n                //putting all the headNodes into an array for easy usage by other sensors\n                var headNodes = [];\n                for (var i = 0; i < sections.length; i++) {\n                    headNodes.push(sections[i].headNode);\n                }\n                \n                //console.log('headNodes : ' + headNodes);\n                //console.log('headNodes[0] : ' + headNodes[0]);\n                \n                \n                var value = {\n                    observedState : 'Found',\n                    rawData : {\n                        sections : sections,\n                        headNodes : headNodes\n                    }\n                };\n               send(null, value);\n            } else {\n                console.log(response);\n                send(new Error(response.statusCode));\n            }\n    });    \n} catch(err){\n    send(new Error(err));\n}",
    "metadata": {
        "author": "Dan Dan",
        "category": "SynField",
        "description": "Retrieve a collection of sections per user (owner)<br>\r\nEndpoint: http://api-synfield.synelixis.com/v1/sections/owner/{username}<br>\r\n\r\n<b>States</b>\r\n<ul>\r\n<li>Found: when an owner's sections are found.</li>\r\n<li>Not Found</li>\r\n</ul><br>\r\n\r\n<b>Properties</b>\r\n<ul>\r\n<li>username (e.g. guest) (if undefined, globalSettings)</li>\r\n<li>authorizationToken (e.g. Basic Z3Vlc3Q...) (if undefined, globalSettings)</li>\r\n</ul><br>\r\n\r\n<b>Raw Data</b>\r\n<ul>\r\n<li>sections[]</li>\r\n<li>headNodes[] - array of headNodes of each section</li>\r\n</ul><br>",
        "documentationURL": "http://www.synelixis.com/synfield/",
        "iconURL": "http://www.micronzindia.com/mic_images/mic_icon_organic.png",
        "supportedStates": [
            "Found",
            "Not Found"
        ],
        "requiredProperties": [
            "username",
            "authorizationToken"
        ],
        "requiredRawData": [],
        "rawData": [
            {
                "parameter": "sections",
                "dataType": "string[]"
            },
            {
                "parameter": "headNodes",
                "dataType": "string[]"
            }
        ]
    }
}