{
  "name": "updateCaseSalesForce",
  "version": "1.0.1",
  "type": "sensor",
  "script": "const jsforce = require('jsforce')\nconst pify = require('pify')\nconst _ = require('lodash')\n\nasync function main () {\n  const caseObject = cleanObject({\n    Id: options.requiredProperties.id,\n    Subject: options.requiredProperties.subject,\n    Description: options.requiredProperties.description,\n    Status: options.requiredProperties.status,\n    Priority: options.requiredProperties.priority,\n    AssetId: options.requiredProperties.assetId,\n    AccountId: options.requiredProperties.accountId,\n    Reason: options.requiredProperties.reason,\n    OwnerId: options.requiredProperties.ownerId,\n    Product__c: options.requiredProperties.product__c\n  })\n\n  const comment = options.requiredProperties.comment\n\n  const conn = await getSalesforceConnection()\n\n  const SfCaseComment = pify(conn.sobject('CaseComment'))\n  const SfCase = pify(conn.sobject('Case'))\n\n  let res\n\n  if (comment) {\n    console.log('add only comment')\n    res = await SfCaseComment.insert({ CommentBody: comment, ParentId: caseObject.Id })\n  } else {\n    res = await SfCase.update(caseObject)\n  }\n\n  send(null, { observedState: 'Success', rawData: { message: JSON.stringify(res) } })\n}\n\nasync function getSalesforceConnection () {\n  try {\n    const { access_token: accessToken } = await waylay.hoard.getTokens('salesforce', { scope: 'organisation' })\n\n    if (!accessToken) {\n      throw new Error('No user or token provided via Hoard service')\n    }\n\n    const jsclient = new jsforce.Connection({\n      instanceUrl: 'https://eu26.salesforce.com',\n      accessToken\n    })\n\n    return jsclient\n  } catch (error) {\n    throw new Error(`error: ${error} \\n possible solution: Connect Salesforce through the connections`)\n  }\n}\n\n/**\n * remove empty values in object before sending to salesforce\n */\nfunction cleanObject (object) {\n  return _.reduce(object, (acc, v, k) => {\n    if (v) acc[k] = v\n    return acc\n  }, {})\n}\n\nmain().catch(send)\n",
  "metadata": {
    "author": "",
    "description": "Add case in SalesForce, all fields are optional except Id. If accountId is not provided, it will be using the account of the person to who belongs the API token. If AssetId it will take waylay resource as AssetId. If comment field is not empty, it will only update the comment field of the case.",
    "documentationURL": "https://docs.waylay.io/plugins/updatecasesalesforce/",
    "iconURL": "https://static.waylay.io/plugs/icons/salesforce-update-case.png",
    "supportedStates": [
      "Success",
      "Error"
    ],
    "requiredProperties": [
      "subject",
      "status",
      "priority",
      "assetId",
      "accountId",
      "reason",
      "ownerId",
      "product__c",
      "id",
      "comment"
    ],
    "requiredRawData": [],
    "rawData": [],
    "configuration": [
      {
        "name": "subject",
        "type": "string",
        "mandatory": false,
        "defaultValue": ""
      },
      {
        "name": "status",
        "type": "string",
        "mandatory": false,
        "defaultValue": ""
      },
      {
        "name": "priority",
        "type": "string",
        "mandatory": false,
        "defaultValue": ""
      },
      {
        "name": "assetId",
        "type": "string",
        "mandatory": false,
        "defaultValue": ""
      },
      {
        "name": "accountId",
        "type": "string",
        "mandatory": false,
        "defaultValue": ""
      },
      {
        "name": "reason",
        "type": "string",
        "mandatory": false,
        "defaultValue": ""
      },
      {
        "name": "ownerId",
        "type": "string",
        "mandatory": false,
        "defaultValue": ""
      },
      {
        "name": "product__c",
        "type": "string",
        "mandatory": false,
        "defaultValue": ""
      },
      {
        "name": "id",
        "type": "string",
        "mandatory": false,
        "defaultValue": ""
      },
      {
        "name": "comment",
        "type": "string",
        "mandatory": false,
        "defaultValue": ""
      }
    ]
  },
  "dependencies": {
    "pify": "^5.0.0",
    "lodash": "^4.17.20",
    "jsforce": "^1.10.1"
  }
}