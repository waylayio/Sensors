{
  "name": "TwilioSMS",
  "version": "1.0.1",
  "type": "sensor",
  "script": "const Twilio = require('twilio')\n\nconst { TWILIO_ACCOUNT_SID, TWILIO_AUTH_TOKEN, message, to, from } = options.requiredProperties\n\nasync function execute () {\n  if (!TWILIO_ACCOUNT_SID || !message || !TWILIO_AUTH_TOKEN || !to || !from) {\n    send(new Error('Missing Property'))\n  }\n\n  const toList = to.trim().split(',')\n\n  try {\n    const client = new Twilio(TWILIO_ACCOUNT_SID, TWILIO_AUTH_TOKEN)\n    const promises = toList.map(to => {\n      return client.messages.create({\n        to: to,\n        from: from,\n        body: message\n      })\n    })\n    const messageResp = await Promise.all(promises)\n\n    send(null, { observedState: 'Success', rawData: { responses: messageResp } })\n  } catch (error) {\n    console.error(error)\n    send(null, { observedState: 'Error', rawData: { errorMessage: 'SMS failed: ' + error } })\n  }\n}\n\nexecute()",
  "metadata": {
    "author": "",
    "description": "<h4>TwilioSMS</h4>\n<br>\nAllows you to send SMS to to one or more contacts using the Twillio service.\n<br><br>\n<b>States</b>\n<ul>\n    <li>\n       Success: The action was executed successfully\n    </li>\n    <li>\n       Error: The action execution failed\n    </li>\n</ul>\n<b>Raw Data</b>\n<ul>\n    <li>\n        responses (only returns on Success state)\n    </li>\n    <li>\n        errorMessage (only returned on Error state)\n    </li>\n</ul>\n<br>\n<b>Properties</b>\n<ul>\n    <li>\n        to: Comma sperated list of phone numbers with county prefix (e.g. BE = +32)\n    </li>\n    <li>\n        from: Twillio phone number that will send the message (must be owned by provided account)\n    </li>\n    <li>\n        message: The message being sent\n    </li>\n    <li>\n        TWILIO_ACCOUNT_SID: Twillio account SID\n    </li>\n    <li>\n        TWILIO_AUTH_TOKEN: Twillio auth token\n    </li>\n</ul>\n<p>We recommend to store the TWILIO_ACCOUNT_SID and TWILIO_AUTH_TOKEN as encrypted values in <a href=\"https://docs.waylay.io/features/rules/vault/\" target=\"_blank>vault</a> and insert them in the properties using <a href=\"https://docs.waylay.io/plugins/sensors-and-actuators/#properties-declarative-binding\" target=\"_blank>declarative binding</a></p>",
    "documentationURL": "https://docs.waylay.io/plugins/twiliosms/",
    "iconURL": "https://static.waylay.io/plugs/icons/twillio.png",
    "supportedStates": [
      "Success",
      "Error"
    ],
    "requiredProperties": [
      "message",
      "to",
      "from",
      "TWILIO_ACCOUNT_SID",
      "TWILIO_AUTH_TOKEN"
    ],
    "requiredRawData": [],
    "rawData": [
      {
        "parameter": "errorMessage",
        "dataType": "string"
      },
      {
        "parameter": "responses",
        "dataType": "object[]"
      }
    ],
    "configuration": [
      {
        "name": "message",
        "type": "string",
        "mandatory": true,
        "format": {},
        "defaultValue": ""
      },
      {
        "name": "to",
        "type": "string",
        "mandatory": true,
        "format": {},
        "defaultValue": ""
      },
      {
        "name": "from",
        "type": "string",
        "mandatory": true,
        "format": {},
        "defaultValue": ""
      },
      {
        "name": "TWILIO_ACCOUNT_SID",
        "type": "string",
        "mandatory": true,
        "format": {},
        "defaultValue": ""
      },
      {
        "name": "TWILIO_AUTH_TOKEN",
        "type": "string",
        "mandatory": true,
        "format": {},
        "defaultValue": ""
      }
    ]
  },
  "dependencies": {
    "twilio": "^3.52.0"
  }
}