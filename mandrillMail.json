{
  "name": "mandrillMail",
  "version": "1.0.0",
  "type": "sensor",
  "script": "const axios = require('axios')\nconst validator = require('email-validator')\n\nasync function sendMail (key, from, to, replyTo, message, subject, sendAt, data) {\n  try {\n    const body = {\n      key: key,\n      send_at: sendAt,\n      message: {\n        html: message,\n        subject: subject,\n        from_email: from,\n        from_name: from,\n        to: [\n          {\n            email: to,\n            name: to,\n            type: 'to'\n          }\n        ],\n        headers: {\n          'Reply-To': replyTo\n        }\n      }\n    }\n    if (data) {\n      body.message.attachments = [\n        {\n          name: 'Attachment.pdf',\n          type: 'application/pdf',\n          content: data.toString('base64')\n        }\n      ]\n    }\n    const resp = await axios.post('https://mandrillapp.com/api/1.0/messages/send.json', body)\n    const { data: respBody } = resp\n    if (respBody[0] && respBody[0].status && respBody[0].status === 'rejected') {\n      send(null, {\n        observedState: 'Error',\n        rawData: { errorMessage: 'Failed to send mail: ' + JSON.stringify(respBody) }\n      })\n    } else {\n      send(null, { observedState: 'Success', rawData: { response: resp } })\n    }\n  } catch (error) {\n    console.error(error)\n    send(null, { observedState: 'Error', rawData: { errorMessage: 'Failed to send mail: ' + error } })\n  }\n}\n\nasync function execute () {\n  const {\n    from,\n    to,\n    replyTo = from,\n    MANDRILL_KEY,\n    message,\n    subject,\n    sendAt,\n    pdfUrl\n  } = options.requiredProperties\n\n  if (!from || !to || !message || !subject) {\n    return send(new Error('Missing property'))\n  }\n\n  if (!MANDRILL_KEY) {\n    return send(new Error('Error missing MANDRILL_KEY, please provide it in the properties'))\n  }\n\n  if (!validator.validate(to) || !validator.validate(from)) {\n    const error = 'Emails are not valid: to=' + to + ', from=' + from\n    return send(new Error(error))\n  }\n\n  if (!pdfUrl) {\n    await sendMail(MANDRILL_KEY, from, to, replyTo, message, subject, sendAt)\n    return\n  }\n\n  try {\n    const pdfResp = await axios.get(pdfUrl, {\n      responseType: 'arraybuffer',\n      headers: {\n        Accept: 'application/pdf'\n      }\n    })\n    await sendMail(MANDRILL_KEY, from, to, replyTo, message, subject, sendAt, pdfResp.data)\n  } catch (error) {\n    console.error(error)\n    send(null, { observedState: 'Error', rawData: { errorMessage: 'Failed to fetch pdf from link: ' + error } })\n  }\n}\n\nexecute()",
  "metadata": {
    "author": "",
    "category": "",
    "description": "<h4>mandrilMail Sensor</h4>\n<br>\nSends email using the mandril api.\n<br><br>\n<b>States</b>\n<ul>\n    <li>\n       Success: The action was executed successfully\n    </li>\n    <li>\n       Error: The action execution failed\n    </li>\n</ul>\n<b>Raw Data</b>\n<ul>\n    <li>\n        response (only returns on Success state)\n    </li>\n    <li>\n        errorMessage (only returned on Error state)\n    </li>\n</ul>\n<br>\n<b>Properties</b>\n<ul>\n    <li>\n        from: Email address the email is sent from (make sure you have registered the domain with mandril)\n    </li>\n     <li>\n        to: Email address the email is sent to\n    </li>\n     <li>\n        message: Contens of the email\n    </li>\n     <li>\n        subject: Subject of the email\n    </li>\n     <li>\n        reply (optional): Reply-to email address\n    </li>\n     <li>\n        send_at (optional): Specify a date and time when the email should be sent (as a UTC timestamp in YYYY-MM-DD HH:MM:SS format)\n    </li>\n     <li>\n        pdfURL (optional): Link to pdf that should be attached\n    </li>\n    <li>\n        MANDRILL_KEY: The mandril api key (we do not recommend to fill in the api key as plaintext use, <a href=\"https://docs.waylay.io/plugins/sensors-and-actuators/#properties-declarative-binding\" target=\"_blank\">declerative binding</a> in combination with <a href=\"https://docs.waylay.io/features/rules/vault/\" target=\"_blank\">vault</a>)\n    </li>\n</ul>",
    "documentationURL": "https://docs.waylay.io/plugins/mandrillmail/",
    "iconURL": "https://static.waylay.io/plugs/icons/mail.png",
    "supportedStates": [
      "Success",
      "Error"
    ],
    "requiredProperties": [
      "from",
      "to",
      "message",
      "subject",
      "reply",
      "send_at",
      "pdfURL",
      "MANDRILL_KEY"
    ],
    "requiredRawData": [],
    "rawData": [
      {
        "parameter": "errorMessage",
        "dataType": "string"
      },
      {
        "parameter": "response",
        "dataType": "object"
      }
    ]
  }
}