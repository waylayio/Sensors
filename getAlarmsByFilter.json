{
  "name": "getAlarmsByFilter",
  "version": "2.0.4",
  "type": "sensor",
  "script": "const { resource, statusFilter, history, typeFilter } = options.requiredProperties\n\nconst alarmFilter = {\n  source: resource,\n  ...(history && { history: history }),\n  ...(typeFilter && { type: typeFilter }),\n  ...(statusFilter && { status: statusFilter }),\n  all: true\n}\n\nasync function execute () {\n  if (!resource) {\n    return send(new Error('resource not defined'))\n  }\n  try {\n    const response = await waylay.alarms.search(alarmFilter)\n    if (response.total > 0) {\n      return send(null, { observedState: 'Found', rawData: { total: response.total, alarms: response.alarms } })\n    }\n    return send(null, { observedState: 'Not Found', rawData: { total: response.total } })\n  } catch (error) {\n    return send(new Error('Querying alarms failed: ' + error))\n  }\n}\n\nexecute()\n",
  "metadata": {
    "author": "",
    "description": "<h4>getAlarmsByFilter Sensor</h4>\n<br>\nFetches all alarms on resource based on a filter.\n<br><br>\n<b>States</b>\n<br>\n<ul>\n    <li>\n        Found\n    </li>\n    <li>\n        Not Found\n    </li>\n</ul>\n<br>\n<b>Raw data</b>\n<ul>\n    <li>\n        total : total number of alarms\n    </li>\n    <li>\n        alarms: array of found alarms\n    </li>\n</ul>\n<br>\n<b>Properties</b>\n<ul>\n    <li>\n        status: the status of the alarms. (ACTIVE,CLEARED or ACKNOWLEDGED) If left empty, only ACTIVE alarms will be fetched\n    </li>\n    <li>\n        type: the type of the alarms\n    </li>\n    <li>\n        resource: alarm created on resource\n    </li>\n    <li>\n        history (boolean): if the history of the alarms should be fetched or not\n    </li>\n\n</ul>\n",
    "documentationURL": "https://docs.waylay.io/plugins/getalarmsbyfilter/",
    "iconURL": "https://static.waylay.io/plugs/icons/get-alarm-by-filter.png",
    "supportedStates": [
      "Found",
      "Not Found"
    ],
    "requiredProperties": [
      "status",
      "history",
      "type",
      "resource"
    ],
    "requiredRawData": [],
    "rawData": [
      {
        "parameter": "total",
        "dataType": "double"
      },
      {
        "parameter": "alarms",
        "dataType": "object"
      }
    ]
  }
}