{"name":"SageMaker","version":"0.2.26","type":"sensor","script":"var AWS = require('aws-sdk');\n\nfunction reportResults(error, data) {\n    if (error) {\n        console.log('Cannot invoke endpoint');\n        console.log(error, error.stack);\n        send(new Error(error), {observedState : \"Not Collected\"});\n    }\n    \n    // Parse the returned data\n    responseData = Buffer.from(data.Body).toString('utf8');\n\n    const value = {\n        observedState: \"Collected\",\n        rawData: {\n            data: responseData\n        }\n    };\n        \n    send(null, value);\n}\n\nfunction invokeSageMaker(error, data) {\n    if (error) {\n        console.log('Cannot assume role');\n        console.log(error, error.stack);\n        send(new Error(error), {observedState : \"Not Collected\"});\n    }\n    \n    const endpoint = waylayUtil.getProperty(options, 'endpoint');\n    const contentType = waylayUtil.getProperty(options, 'contentType');\n    const observations = waylayUtil.getProperty(options, 'observations');\n\n    const sageMakerRuntime = new AWS.SageMakerRuntime({});\n\n    const params = {\n        Body: JSON.stringify(observations),\n        EndpointName: endpoint,\n        ContentType: contentType,\n    };\n\n    sageMakerRuntime.invokeEndpoint(params, reportResults);\n}\n\nfunction updateAwsConfig(awsConfig) {\n    AWS.config.update({\n        credentials: {\n            accessKeyId: awsConfig.key,\n            secretAccessKey: awsConfig.secret,\n        },\n        region: awsConfig.region,\n    });\n}\n\nfunction checkSensorPrerequisits() {\n    // Check if everything is provided, else fail early\n    if (!waylayUtil.getProperty(options, 'endpoint')) {\n        send(new Error('Missing property: endpoint'), {observedState : \"Not Collected\"});\n        return false;\n    }\n    if (!waylayUtil.getProperty(options, 'observations')) {\n        send(new Error('Missing property: observations'), {observedState : \"Not Collected\"});\n        return false;\n    }\n    if (!waylayUtil.getProperty(options, 'contentType')) {\n        send(new Error('Missing property: contentType'), {observedState : \"Not Collected\"});\n        return false;\n    }\n    if (!options.globalSettings.sagemaker_config) {\n        send(new Error('Missing SageMaker config.'), {observedState : \"Not Collected\"});\n        return false;\n    }\n    \n    return true\n}\n\nfunction run() {\n    if (!checkSensorPrerequisits()) return;\n    \n    const awsConfig = JSON.parse(options.globalSettings.sagemaker_config);\n    \n    updateAwsConfig(awsConfig);\n    \n    // Switch to the role that is allowed to invoke sagemaker endpoint.\n    const sts = new AWS.STS();\n    sts.assumeRole(\n        {\n            RoleArn: awsConfig.role,\n            RoleSessionName: 'sagemaker-session'\n        },\n        invokeSageMaker\n    );\n}\n\nrun();\n","metadata":{"author":"Waylay","category":"SageMaker","description":"SageMaker endpoint invoker.\n<br>\nUsed to invoke a SageMaker endpoint run on the AWS platform.\n<br><br>\n<b>States</b>\n<ul>\n    <li>\n        Not Collected: Indicates that no results are ready be due to an error.\n    </li>\n    <li>\n        Collected: Indicates that a request was made and the results are ready to use.\n    </li>\n</ul>\n<br>\n<b>Raw data</b>\n<ul>\n    <li>\n        data: This will contain the result returned by the SageMaker endpoint.\n    </li>\n</ul>\n<br>\n<b>Properties</b>\n<ul>\n    <li>\n        endpoint: The name to the SageMaker endpoint, not the complete url.\n    </li>\n    <li>\n        observations: The object with observations formated in the way that SageMaker endpoint expects.\n    </li>\n    <li>\n        contentType: The MIME type of the observations.\n    </li>\n</ul>\n<br>\n<b>Global settings</b>\n<br>\nThis sensor makes use of default values defined under the <code>sagemaker_config</code> key within the Global Settings of your Waylay Console. This object should look like this:\n<pre><code>{\n    \"region\": The region in which the SageMaker endpoints operate,\n    \"role\": IAM role that has permission to use SageMaker (the user specified with the key-secret pair should be included in this role's trusted entities https://docs.aws.amazon.com/glue/latest/dg/create-an-iam-role-sagemaker-notebook.html),\n    \"key\": They key for the AWS account,\n    \"secret\": The secret for the AWS account\n}</code></pre>\n","iconURL":"https://static.waylay.io/plugs/icons/sagemaker.png","supportedStates":["Collected","Not Collected"],"requiredProperties":["endpoint","observations","contentType"],"requiredRawData":[],"rawData":[{"parameter":"data","dataType":"double[]"}]},"dependencies":{"aws-sdk":"2.596.0"}}
