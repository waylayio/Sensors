{"name":"timeseriesQueryData","version":"1.0.3","type":"sensor","script":"function parseISOStringDataInput (input) {\n    const duration = moment.duration(input)\n    return moment().subtract(duration).unix() * 1000\n}\n\nfunction parseTimestamp (timestamp) {\n    if (!isNaN(timestamp))\n        return timestamp\n    if (timestamp && timestamp !== '' && isNaN(timestamp))\n        return parseISOStringDataInput(timestamp)\n}\n\nasync function execute () {\n    const {\n        queryName,\n        window,\n        from,\n        until\n    } = options.requiredProperties\n    \n    if (!queryName || queryName === '') {\n        send(new Error('No valid queryName supplied'), null)\n        return\n    }\n    \n    const queryOptions = {\n        window,\n        from: parseTimestamp(from),\n        until: parseTimestamp(until)\n    }\n    \n    const response = await waylay.analytics.getQueryData(queryName, queryOptions)\n    \n    send(null, {\n        observedState: response['data']['columns'] <= 1 ? 'Not Collected' : 'Collected',\n        rawData: response\n    })\n}\n\nexecute()","metadata":{"author":"Sander Vanhove","category":"Waylay","description":"Get the data as specified by a certain data query.\n\nYou can specify a window, from and until to control the timeframe that is fetched.","iconURL":"https://static.waylay.io/icons/query_designer.png","supportedStates":["Collected","Not Collected"],"requiredProperties":["queryName","window","from","until"],"requiredRawData":[],"rawData":[]}}