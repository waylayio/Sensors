{
    "name": "waylayGetLatestItemForTaskID",
    "version": "0.0.2",
    "type": "sensor",
    "script": "var thing  = options.task.TASK_ID;\nvar username =  options.globalSettings.API_KEY;\nvar password = options.globalSettings.API_PASS;\nvar domain = options.requiredProperties.domain || \"app.waylay.io\";\n\nif(thing && domain && username && password) {\n    var url = \"https://\"+ username + ':' + password +'@data.waylay.io/resources/'+ thing +\"/current?domain=\"+domain;\n    request(url, function (error, response, body) {\n      if (!error && response.statusCode == 200) {\n        console.log(body);\n        var rawData = JSON.parse(body);\n        var value = {\n            observedState: \"Collected\",\n            rawData: rawData\n        };\n        console.log(\"value \" + value);\n        send(null, value);\n        }\n    else {\n        console.log(response);\n        send(null, {observedState : \"Not Collected\"});\n    }\n    }); \n   \n}else{\n  send(new Error(\"Missing properties\"));\n}\n",
    "metadata": {
        "author": "",
        "category": "Waylay",
        "description": "Waylay sensor that fetches latest data based on the task ID of the running task - which is used as the resource identifier.\n<br>\nThis can be interesting in case you need temporarly to store data which is related only to the running task.\nFor instance, you can use the actuator that stores data in the cloudCache using options.task.TASK_ID as a resource, and use this sensor to retrieve the data.\nIt is also possible that external system sends data using task ID as a resource, and use this sensor fetches it.\n\n",
        "documentationURL": "http://docs.waylay.io/Submitting-and-fetching-data.html#Retrievingdata",
        "iconURL": "https://raw.githubusercontent.com/waylayio/documentation/master/icons/inventory.png",
        "supportedStates": [
            "Collected",
            "Not Collected"
        ],
        "requiredProperties": [
            "domain"
        ],
        "requiredRawData": [],
        "rawData": []
    }
}
