{
    "name": "switch",
    "version": "1.0.2",
    "type": "sensor",
    "script": " var data = waylayUtil.getStreamData(options, options.requiredProperties.item) || options.requiredProperties.item;\n try {\n     data = waylayUtil.getRawData(options, options.requiredProperties.item) ;\n } catch (err){\n    console.log(\"input argument is not in the raw data\");\n }\n \n if(data === undefined){\n     send(new Error(\"input argument not found\"))\n }\n else{\n     var openValue = data.toLowerCase().indexOf(\"on\") > -1;\n     var closedValue = data.toLowerCase().indexOf(\"off\") > -1;\n      if(!openValue && !closedValue){\n        send(new Error(\"Not found whether it is on or off\"))\n     } else {\n        send(null, { observedState : openValue ? \"on\":\"off\"});\n     }\n }\n",
    "metadata": {
        "author": "",
        "category": "Home",
        "description": "This sensor can be used in case you want either to push the switch state using a Broker \n- via getStreamData call, or if the state of the switch comes from another node, \nvia getRawData. \n\nThe sensor will return back if the switch is on or off. If none of these is found\nit will throw the exception.\n\nInput argument (item) can be:\n<ul>\n<li>string like on/off</li>\n<li>rawData that holds on/off string</li>\n<li>streamData parameter that holds on/off string</li>\n</ul>\n\nExample: use as the item \"switch\" and then push this data:\n\n{\n \"switch\" : \"on\"\n}",
        "iconURL": "https://raw.githubusercontent.com/waylayio/documentation/master/icons/switch.png",
        "supportedStates": [
            "on",
            "off"
        ],
        "requiredProperties": [
            "item"
        ],
        "requiredRawData": [],
        "rawData": []
    }
}
