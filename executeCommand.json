{
  "name": "executeCommand",
  "version": "1.0.1",
  "type": "sensor",
  "script": "const { resource, command, properties } = options.requiredProperties\n\nasync function execute () {\n  if (!command) {\n    return send(new Error('Missing property'))\n  }\n\n  if (!resource) {\n    return send(new Error('Resource not configured'))\n  }\n  let parsedProperties\n  try {\n    parsedProperties = typeof properties === 'string' ? JSON.parse(properties) : properties\n  } catch (error) {\n    return send(error)\n  }\n  try {\n    const response = await waylay.resources.executeCommand(resource, command, parsedProperties)\n    send(null, { observedState: 'Success', rawData: { response } })\n  } catch (error) {\n    console.error(error)\n    send(null, { observedState: 'Error', rawData: { errorMessage: 'Failed to execute command: ' + error } })\n  }\n}\n\nexecute()",
  "metadata": {
    "author": "",
    "description": "<h4>executeCommand Sensor</h4>\n<br>\nExecutes command for a resource. \nA command in turn is resolved to a particular actuator. \n<br><br>\n<b>States</b>\n<ul>\n    <li>\n       Success: The action was executed successfully\n    </li>\n    <li>\n       Error: The action execution failed\n    </li>\n</ul>\n<b>Raw Data</b>\n<ul>\n    <li>\n        response (only returns on Success state)\n    </li>\n    <li>\n        errorMessage (only returned on Error state)\n    </li>\n</ul>\n<br>\n<b>Properties</b>\n<ul>\n    <li>\n        command: The command configured on the resource\n    </li>\n    <li>\n        resource: Waylay resource\n    </li>\n     <li>\n        properties (optional): Properties to overwrite default properties of the command (It expects an JSON object where the key is the same as the property you wish to overwrite. Only provide the properies you wish to override, the other onses will be kept.)\n    </li>\n</ul>\n\n<br>\n<b>Example: properties</b>\nFor instance, if the command resolves to the <a href=\"https://docs.waylay.io/plugins/twiliosms/\" target=\"_blank\">twillioSMS</a> actuator, you can can for example provide input properties to change to who the message is being sent (to) and what the actual message is (message) while the other ones are kept.\ne.g.:\n<pre>\n{ \n \"message\" : \"I will be shown instead of that silly message configured in the command!\",\n \"to\": \"+32495123456\"\n}\n</pre>\n\nMore info about commands can be found <a href=\"https://docs.waylay.io/features/resources/resources/#commands\" target=\"_blank\">here</a>",
    "documentationURL": "https://docs.waylay.io/plugins/executecommand/",
    "iconURL": "https://static.waylay.io/plugs/icons/command.png",
    "supportedStates": [
      "Success",
      "Error"
    ],
    "requiredProperties": [
      "command",
      "properties",
      "resource"
    ],
    "requiredRawData": [],
    "rawData": [
      {
        "parameter": "response",
        "dataType": "object"
      },
      {
        "parameter": "errorMessage",
        "dataType": "string"
      }
    ],
    "configuration": [
      {
        "name": "command",
        "type": "string",
        "mandatory": true,
        "defaultValue": ""
      },
      {
        "name": "properties",
        "type": "object",
        "mandatory": false
      },
      {
        "name": "resource",
        "type": "string",
        "mandatory": true,
        "format": {
          "type": "resource"
        },
        "defaultValue": ""
      }
    ]
  }
}