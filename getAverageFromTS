{
  "name": "getAverageFromTS",
  "version": "2.0.2",
  "type": "sensor",
  "script": "var resource  = waylayUtil.getProperty(options, \"resource\") || waylayUtil.getResource(options) \n\nvar metric = waylayUtil.getProperty(options, \"metric\")\nvar minutes =  waylayUtil.getProperty(options, \"minutes\") || 30\nvar hours =  waylayUtil.getProperty(options, \"hours\") \nconsole.log('hours', hours)\n\nif(hours !== '' && hours !== undefined && !isNaN(hours)) {\n    minutes = 60 * parseInt(hours)\n}\nconsole.log('minutes', minutes)\n\nvar from = moment().subtract(parseInt(minutes),'minutes')\nvar qs = {from: from.unix() * 1000, grouping: 'minute'}\n\nwaylay.data.baseUrl = options.globalSettings.waylay_data ||  \"https://data.waylay.io\"\n\n\nwaylay.data.getMetricSeries(resource, metric, qs)\n.then(data => {\n    data.series = _.reject(data.series, o=>{ return o[1] === null })\n    if(data.series.length > 0) {\n       var avg = _.sumBy(data.series, o=> { return o[1] })/data.series.length\n       rawData = {avg: avg, count: data.series.length}\n       if(data.series.length > 1) {\n            rawData.last = _.max(data.series, o=> {return o[0]})\n            rawData.first = _.min(data.series, o=> {return o[0]})\n            rawData.delta = rawData.last[1] - rawData.first[1]  \n            rawData.throughput = (rawData.last[1] - rawData.first[1])/(rawData.last[0] - rawData.first[0])  \n       }\n       rawData.data =  data.series\n        var value = {\n            observedState: \"Collected\",\n            rawData: rawData\n        }\n        send(null, value)\n    } else {\n            send(null, {observedState : \"Not Collected\"})\n    }\n})\n.catch(err=> {\n    console.log(err.message)\n     send(new Error(err))\n})\n\n         ",
  "metadata": {
    "author": "Veselin",
    "category": "Waylay",
    "description": "Get average value from the time series database. \nResource is etiher provided from the input field, raw data or from the resource \nassoisated with a node to which this sensor is attached.\nAs from version 1.1.0. it uses waylay nmp package (sandbox 0.14.0)\n\nInput arguments are: <br>\n<ul>\n<li>resource</li>\n<li>metric</li>\n<li>past minutes, default 30 minutes</li>\n<li>past hours, kept for backwards compatiblity, \nnew users are encouraged to use minutes instead</li>\n<ul>\n",
    "documentationURL": "",
    "iconURL": "https://static.waylay.io/plugs/icons/graph-circle.png",
    "supportedStates": [
      "Collected",
      "Not Collected"
    ],
    "requiredProperties": [
      "resource",
      "metric",
      "minutes",
      "hours"
    ],
    "requiredRawData": [],
    "rawData": [
      {
        "parameter": "data",
        "dataType": "object[]"
      },
      {
        "parameter": "avg",
        "dataType": "double"
      },
      {
        "parameter": "count",
        "dataType": "double"
      },
      {
        "parameter": "delta",
        "dataType": "double"
      },
      {
        "parameter": "throughput",
        "dataType": "double"
      },
      {
        "parameter": "first",
        "dataType": "object"
      },
      {
        "parameter": "last",
        "dataType": "object"
      }
    ]
  }
}
