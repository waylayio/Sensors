{
  "name": "getAssetFromSalesForce",
  "version": "0.0.10",
  "type": "sensor",
  "script": "/**\n * main() is called at the end of this file.\n */\nasync function main () {\n\n    Object.assign(options, { hoardUrl: 'https://auth-staging.waylay.io' })\n        \n    let caseObject = { }\n    caseObject.SerialNumber = \"\" + waylayUtil.getProperty(options, \"SerialNumber\") \n    caseObject.Name = waylayUtil.getProperty(options, \"Name\") || waylayUtil.getResource(options)\n    caseObject.Id = waylayUtil.getProperty(options, \"Id\")\n    // trying to manipulate a const instead of let will get stuck until timeout\n    caseObject = _.reduce(caseObject, (acc, v, k) => {\n        if (v) acc[k] = v   \n        return acc\n    }, {})\n    \n    try {\n        const conn = await getSalesforceConnection()\n\n        conn.sobject(\"Asset\").find(caseObject, function(err, ret) {\n            if (err) {\n                send(new Error(err))\n            } else if (ret.length > 0){\n                send(null, { observedState : \"Found\", rawData : ret[0]})\n            } else {\n                send(null, { observedState : \"Not Found\"})\n            }\n        })\n    } catch(error) {\n        send(error)\n    }\n}\n\n/**\n * @return Salesforce Connection\n */\nasync function getSalesforceConnection () {\n    try {\n        // TRY TO GET A SALESFORCE CONNECTION USING HOARD\n        const connHoard = await getSalesforceConnectionWithHoard()\n        console.log('connection is made with hoard')\n        return connHoard\n    } catch (hoardError) {\n        try {\n            // TRY TO USE A SALESFORCE CONNECTION USING GLOBAL SETTINGS: 'salesForceUser' and 'salesForceToken'\n            const connGlobalSettings = await getSalesforceConnectionWithGlobalSettings()\n            console.log('connection is made with global settings')\n            return connGlobalSettings\n        } catch(globalSettingsError){\n             throw new Error(`\n                MESSAGE: 'unable to get salesforce connection trough either hoard or global settings', \\n\n                HOARD ERROR: ${hoardError} \\n \n                GLOBAL SETTINGS ERROR: ${globalSettingsError} \\n\n                POSSIBLE SOLUTION: Connect Salesforce trough channels or set 'salesForceUser' and 'salesForceToken' in the global settings\n            `)\n        }\n    }\n}\n\nasync function getSalesforceConnectionWithHoard() {\n    const user = waylayUtil.getProperty(options, \"user\") || \"organisation\"\n\n    const tokens = await waylayUtil.getAuthTokens(options, user, \"salesforce\")\n\n    if(!user || !tokens) \n        throw new Error('No user or token provided via Hoard service')\n    \n    const conn = new jsforce.Connection({\n      instanceUrl : 'https://eu26.salesforce.com',\n      accessToken : tokens.access_token\n    })\n    \n    return conn\n}\n\nasync function getSalesforceConnectionWithGlobalSettings() {\n    const user = options.globalSettings.salesForceUser\n    const token = options.globalSettings.salesForceToken\n\n    if(!user || !token) \n        throw new Error('No user or token provided via global settings')\n    \n    const conn = new jsforce.Connection()\n    return new Promise((resolve, reject) => {\n        conn.login(user, token, function(err, res) {\n            err ? reject(err) : resolve(conn)\n        })\n    })\n}\n\nmain()\n\n",
  "metadata": {
    "author": "",
    "category": "SalesForce",
    "description": "Example of asset sensor for SalesForce, raw Data example:\n\n<pre>\n \"Id\": \"02i1i000000h1OnAAI\",\n  \"ContactId\": null,\n  \"AccountId\": \"0011i00000A2MktAAF\",\n  \"Product2Id\": \"01t1i000000eMAjAAM\",\n  \"IsCompetitorProduct\": false,\n  \"CreatedDate\": \"2019-04-17T14:23:53.000+0000\",\n  \"CreatedById\": \"0051i000000fYz5AAE\",\n  \"LastModifiedDate\": \"2019-04-17T14:23:53.000+0000\",\n  \"LastModifiedById\": \"0051i000000fYz5AAE\",\n  \"SystemModstamp\": \"2019-04-17T14:23:53.000+0000\",\n  \"IsDeleted\": false,\n  \"Name\": \"EngineX\",\n  \"SerialNumber\": \"12345\",\n  \"InstallDate\": \"2019-04-16\",\n  \"PurchaseDate\": \"2019-04-04\",\n  \"UsageEndDate\": null,\n  \"Status\": \"Installed\",\n  \"Price\": 10000,\n  \"Quantity\": 1,\n  \"Description\": null,\n  \"OwnerId\": \"0051i000000fYz5AAE\",\n  \"LastViewedDate\": \"2019-04-18T16:09:03.000+0000\",\n  \"LastReferencedDate\": \"2019-04-18T16:09:03.000+0000\"\n  </pre>\n",
    "iconURL": "https://static.waylay.io/plugs/icons/get-asset-from-salesforce.png",
    "supportedStates": [
      "Found",
      "Not Found"
    ],
    "requiredProperties": [
      "SerialNumber",
      "Id",
      "Name"
    ],
    "requiredRawData": [],
    "rawData": [
      {
        "parameter": "ContactId",
        "dataType": "string"
      },
      {
        "parameter": "AccountId",
        "dataType": "string"
      },
      {
        "parameter": "Product2Id",
        "dataType": "string"
      },
      {
        "parameter": "SerialNumber",
        "dataType": "integer"
      },
      {
        "parameter": "InstallDate",
        "dataType": "string"
      },
      {
        "parameter": "Status",
        "dataType": "string"
      },
      {
        "parameter": "Price",
        "dataType": "double"
      },
      {
        "parameter": "Description",
        "dataType": "string"
      },
      {
        "parameter": "OwnerId",
        "dataType": "string"
      },
      {
        "parameter": "Name",
        "dataType": "string"
      },
      {
        "parameter": "Quantity",
        "dataType": "double"
      },
      {
        "parameter": "OwnerId",
        "dataType": "string"
      }
    ]
  }
}
