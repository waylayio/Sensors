{
    "name": "netatmoWeatherStation",
    "version": "0.0.6",
    "type": "sensor",
    "script": "// Docs at https://dev.netatmo.com/doc\n//\n// Go to https://dev.netatmo.com/dev/createapp and create an app\n// add these global settings:\n// NETATMO_CLIENT_ID\n// NETATMO_CLIENT_SECRET\n//\n// We suggest to not use your main account but to share your account to a\n// waylay specific user with less rights (cog button -> invite station guest)\n//\n// Provide username and password on the sensor level or globally using\n// NETATMO_USERNAME\n// NETATMO_PASSWORD\n//\n// TODO see if we can get proper oauth2 going, but how will we do token refresh?\n// sensors can not modigy global settings\n\nvar props = options.requiredProperties;\n\nvar clientId = props.clientId || options.globalSettings.NETATMO_CLIENT_ID;\nvar clientSecret = props.clientSecret || options.globalSettings.NETATMO_CLIENT_SECRET;\nvar username = props.username || options.globalSettings.NETATMO_USERNAME;\nvar password = props.password || options.globalSettings.NETATMO_PASSWORD;\nvar moduleName = props.moduleName;\n\nvar getToken = function(callback){\n  var options = {\n      url: \"https://api.netatmo.net/oauth2/token\",\n      form: {\n        grant_type: \"password\",\n        client_id: clientId,\n        client_secret: clientSecret,\n        username: username,\n        password: password,\n        scope: \"read_station\"\n      }\n  };\n  var postCallback = function(error, response, body) {\n      if (!error && response.statusCode == 200) {\n          var bodyJson = JSON.parse(body);\n          //console.info(bodyJson);\n          //console.info(bodyJson.access_token);\n          callback(null, bodyJson.access_token);\n      }else{\n          callback(new Error(\"Calling netatmo api failed: \" + error + \" \" + body + options.url));\n      }\n  }\n  request.post(options, postCallback);\n}\n\nvar getFirstDeviceData = function(token, moduleName, callback){\n  var options = {\n      url: \"https://api.netatmo.net/api/devicelist\",\n      qs: {\n        access_token: token\n      }\n  };\n  var getCallback = function(error, response, body) {\n      if (!error && response.statusCode == 200) {\n          var bodyJson = JSON.parse(body);\n          //console.info(bodyJson);\n          var all = [].concat(bodyJson.body.modules, bodyJson.body.devices);\n          var allFormatted = \"[\" + __.map(all, 'module_name')+ \"]\";\n          console.info(\"selecting '\" + moduleName + \"' from found devices: \" + allFormatted);\n          var theModule = __.find(all, {module_name:moduleName});\n          if(theModule === undefined){\n            callback(new Error(\"Calling netatmo api failed: no module or device with name '\" + moduleName + \"', found \" + allFormatted));\n          }else{\n            var value = {\n                observedState: \"Found\",\n                rawData: theModule.dashboard_data\n            };\n            callback(null, value);\n          }\n      }else{\n          callback(new Error(\"Calling netatmo api failed: \" + error + \" \" + body + options.url));\n      }\n  }\n  request.get(options, getCallback);\n}\n\nif(clientId !== undefined && clientSecret !== undefined && username !== undefined && password !== undefined){\n  getToken(function(err, token){\n    if(err){\n      send(err);\n    }else{\n      getFirstDeviceData(token, moduleName, function(err, data){\n        if(err){\n          send(err);\n        }else{\n          send(null, data);\n        }\n      });\n    }\n  });\n}else{\n    send(new Error(\"Missing properties\"));\n}\n",
    "metadata": {
        "author": "francisdb",
        "category": "Weather",
        "description": "Netatmo Weather station\n<pre>\nGo to https://dev.netatmo.com/dev/createapp and create an app\nadd these global settings:\nNETATMO_CLIENT_ID\nNETATMO_CLIENT_SECRET\n\nWe suggest to not use your main account but to share your account to a waylay specific user with less rights (cog button -> invite station guest)\n\nProvide username and password on the sensor level or globally using\nNETATMO_USERNAME\nNETATMO_PASSWORD\n\nSet the moduleName to the device name you want to get data from\n</pre>",
        "iconURL": "http://static.waylay.io/images/plugs/netatmo.jpg",
        "supportedStates": [
            "Found",
            "NotFound"
        ],
        "requiredProperties": [
            "username",
            "password",
            "moduleName"
        ],
        "requiredRawData": [],
        "rawData": []
    }
}
