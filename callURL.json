{
  "name": "callURL",
  "version": "2.0.1",
  "type": "sensor",
  "script": "const axios = require('axios')\n\nconst { url, method } = options.requiredProperties\n\nasync function execute () {\n  let body\n  if (options.requiredProperties.body) {\n    try {\n      body = JSON.parse(options.requiredProperties.body)\n    } catch (error) {\n      return send(new Error('Body property could not be parsed as JSON'))\n    }\n  }\n  if (!url || !method) {\n    return send(new Error('Missing properties'))\n  }\n  try {\n    const response = await axios({ url, data: body, method, timeout: 10000 })\n    send(null, { observedState: 'Success', rawData: response })\n  } catch (error) {\n    console.error(error)\n    send(null, { observedState: 'Error', rawData: { errorMessage: 'Failed to call url: ' + error } })\n  }\n}\n\nexecute()\n",
  "metadata": {
    "author": "",
    "description": "This sensor calls an URL using the axios library.",
    "documentationURL": "https://docs.waylay.io/plugins/callurl/",
    "iconURL": "https://static.waylay.io/plugs/icons/ping.png",
    "supportedStates": [
      "Success",
      "Error"
    ],
    "requiredProperties": [
      "url",
      "method",
      "body"
    ],
    "requiredRawData": [],
    "rawData": [
      {
        "parameter": "response",
        "dataType": "object"
      },
      {
        "parameter": "errorMessage",
        "dataType": "string"
      }
    ],
    "configuration": [
      {
        "name": "url",
        "type": "string",
        "mandatory": true,
        "defaultValue": ""
      },
      {
        "name": "method",
        "type": "string",
        "mandatory": true,
        "defaultValue": ""
      },
      {
        "name": "body",
        "type": "object",
        "mandatory": true
      }
    ]
  },
  "dependencies": {
    "axios": "^0.20.0"
  }
}