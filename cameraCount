{
    "name": "cameraCount",
    "version": "0.0.1",
    "type": "sensor",
    "script": "// url like : http://www.doschdesign.com/images2/Red-DVI-MovingPeople-Business.jpg\nvar image = {image: options.requiredProperties.url};\nvar TOKEN = options.globalSettings.SIGHTHOUND_TOKEN;\n\nvar url = \"https://api-developer.sighthound.com/v1/detections\";\n\nvar options = {\n    url: url,\n    json: image,\n     headers: {\n        'X-Access-Token': TOKEN\n  }\n};\n\nrequest.post(options, function(error, response, body) {\n    if (!error && (response.statusCode == 200 || response.statusCode == 201)) {\n       var objects = body.objects;\n       var state = objects.length > 0? \"Found\": \"Not Found\";\n       console.log(objects);\n       var rawData = {};\n       if(state == \"Found\"){\n           rawData.personCount  = __.filter(objects, function(obj) {return obj.type == \"person\";}).length;\n           rawData.faceCount  = __.filter(objects, function(obj) {return obj.type == \"face\";}).length;\n           rawData.objects = objects;\n       }\n       \n       send(null, { observedState : state , rawData : rawData});\n    }else{\n      //console.log(response);\n      send(new Error(\"Calling failed: \" + response));\n    }\n });\n",
    "metadata": {
        "author": "",
        "category": "Waylay",
        "description": "Counts the number of persons and faces from the still image (url).\n\n\nIf it finds persons or faces it returns state Found, with the folowing info in the raw data:\n\n<ul>\n<li>personCount</li>\n<li>faceCount</li>\n<li>objects, list of objects in raw format</li>\n</ul>\n\n\nyou will need a SIGHTHOUND_TOKEN in the global settings.\n",
        "iconURL": "https://raw.githubusercontent.com/waylayio/documentation/master/icons/camera-icon.png",
        "supportedStates": [
            "Found",
            "Not Found"
        ],
        "requiredProperties": [
            "url"
        ],
        "requiredRawData": [],
        "rawData": [
            {
                "parameter": "personCount",
                "dataType": "integer"
            },
            {
                "parameter": "faceCount",
                "dataType": "integer"
            },
            {
                "parameter": "objects",
                "dataType": "array"
            }
        ]
    }
}
